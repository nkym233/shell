name: Auto Download, Split (TXT), and Format (NFT) China IP List

on:
  schedule:
    - cron: '0 16 * * *'  # 每天UTC 16:00执行，对应中国时间 00:00 (UTC+8)
  push:
    branches:
      - main  # 推送到main分支时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  update_split_format: # 作业名称反映所有操作
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download China IP list and check for changes
        id: download
        run: |
          echo "Downloading latest China IP list..."
          curl -L https://github.com/Loyalsoldier/geoip/raw/refs/heads/release/text/cn.txt -o cn.txt.new --fail || { echo "Download failed"; exit 1; }

          if [ -f "cn.txt" ]; then
            if cmp -s "cn.txt" "cn.txt.new"; then
              echo "IP list has not changed. Skipping update."
              echo "changed=false" >> $GITHUB_OUTPUT
              rm cn.txt.new
              exit 0
            else
               echo "IP list has changed."
            fi
          else
            echo "Local cn.txt not found. Will process."
          fi

          mv cn.txt.new cn.txt
          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Split IPs to TXT and Format to NFT
        # 仅当 download 步骤的输出 changed 为 'true' 时运行
        if: steps.download.outputs.changed == 'true'
        run: |
          echo "Processing IP list..."

          # --- 1. Split into TXT files ---
          TXT_V4_FILE="china_ipv4.txt"
          TXT_V6_FILE="china_ipv6.txt"
          echo "Splitting into $TXT_V4_FILE and $TXT_V6_FILE..."
          # 使用 awk 分割 IP (增加 !/^$/ 避免处理空行)
          awk '!/^$/ {if ($1 ~ /^[0-9]+\./) print $1 > "'"$TXT_V4_FILE"'"; else print $1 > "'"$TXT_V6_FILE"'"}' cn.txt
          echo "TXT splitting complete."

          # --- 2. Format into NFT files (reading from TXT files) ---
          NFT_V4_FILE="cnip_v4.nft"
          NFT_V6_FILE="cnip_v6.nft"

          # Create cnip_v4.nft
          echo "Creating $NFT_V4_FILE..."
          printf "set cnip_v4 {\n\ttype ipv4_addr\n\tflags interval\n\tauto-merge\n\telements = {\n" > "$NFT_V4_FILE"
          if [ -s "$TXT_V4_FILE" ]; then # 检查源 TXT 文件是否存在且非空
              awk '{print "\t" $1 ","}' "$TXT_V4_FILE" >> "$NFT_V4_FILE"
              sed -i '$ s/,$//' "$NFT_V4_FILE" # 移除最后一个元素的逗号
          fi
          printf "\n\t}\n}\n" >> "$NFT_V4_FILE"
          echo "$NFT_V4_FILE created."

          # Create cnip_v6.nft
          echo "Creating $NFT_V6_FILE..."
          printf "set cnip_v6 {\n\ttype ipv6_addr\n\tflags interval\n\tauto-merge\n\telements = {\n" > "$NFT_V6_FILE"
          if [ -s "$TXT_V6_FILE" ]; then # 检查源 TXT 文件是否存在且非空
              awk '{print "\t" $1 ","}' "$TXT_V6_FILE" >> "$NFT_V6_FILE"
              sed -i '$ s/,$//' "$NFT_V6_FILE" # 移除最后一个元素的逗号
          fi
          printf "\n\t}\n}\n" >> "$NFT_V6_FILE"
          echo "$NFT_V6_FILE created."

          echo "NFT formatting complete."

      - name: Commit and push generated files
        # 仅当 download 步骤的输出 changed 为 'true' 时运行
        if: steps.download.outputs.changed == 'true'
        run: |
          git config --global user.name "nkym233" # Or GitHub Actions Bot name
          git config --global user.email "mail@wej.cc" # Or associated email
          # 添加所有相关文件
          git add cn.txt china_ipv4.txt china_ipv6.txt cnip_v4.nft cnip_v6.nft

          # 检查是否有实际的文件变动需要提交
          if ! git diff --staged --quiet; then
            git commit -m "Update China IP list and generate TXT/NFT formats"
            git push origin main
          else
            echo "No changes detected in tracked files to commit."
          fi
